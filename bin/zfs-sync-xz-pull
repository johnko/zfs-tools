#!/bin/sh

if [ -z "${4}" ]; then
    echo "Usage: $0  dataset  remote_server:remote_port  pool  output_folder"
    exit 1
fi

#DRYRUN="-n"

DATASET="${1}"

if [ "x-" = "x${2}" ]; then
    REMOTE_CONNECTION=""
else
    if echo "${2}" | grep ':' >/dev/null 2>&1 ; then
        REMOTE_HOST=$( echo "${2}" | cut -f1 -d: )
        REMOTE_PORT=$( echo "${2}" | cut -f2 -d: )
    else
        REMOTE_HOST="${2}"
        REMOTE_PORT=22
    fi
    REMOTE_CONNECTION="ssh -p ${REMOTE_PORT} ${REMOTE_HOST}"
fi

RECVPOOL="${3}"

OUTPUTDIR="${4}"


# ALGORITHM: local_last_snapshot
STARTAT=$( ls /${DATASET}/.zfs/snapshot/ | tail -1 )
# ALGORITHM: ssh remote remote_last_snapshot
ENDAT=$( $REMOTE_CONNECTION "ls /${DATASET}/.zfs/snapshot/" | grep -A999 ${STARTAT} | tail -1 )

if [ "$STARTAT" = "$ENDAT" ]; then
    echo "local $STARTAT = remote $ENDAT"
else
    # ALGORITHM: ssh remote zfs-xz-multi-export local_last_snapshot to remote_last_snapshot
    # limit to 5 so we don't run out of room
    $REMOTE_CONNECTION "zfs-xz-multi-export  ${DATASET}@${STARTAT}  ${OUTPUTDIR}  5"

    # ALGORITHM: zfs-xz-rsync-pull
    zfs-xz-rsync-pull  ${2}  ${OUTPUTDIR}

    # ALGORITHM: zfs-xz-multi-import /scratch/urep tank
    echo "zfs rollback ${DATASET}@${STARTAT}"
          zfs rollback ${DATASET}@${STARTAT}
    echo "zfs-xz-multi-import  ${OUTPUTDIR}  ${RECVPOOL}"
          zfs-xz-multi-import  ${OUTPUTDIR}  ${RECVPOOL}
fi
